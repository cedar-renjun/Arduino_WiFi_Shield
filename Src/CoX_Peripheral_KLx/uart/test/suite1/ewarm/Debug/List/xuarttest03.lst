###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     24/Feb/2013  09:52:17 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\src\xuarttest03.c                 #
#    Command line =  C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\src\xuarttest03.c -D ewarm -lCN   #
#                    C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\ewarm\Debug\List\ -lB             #
#                    C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\ewarm\Debug\List\ -o              #
#                    C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\ewarm\Debug\Obj\ --no_cse         #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M0+ -e --fpu=None --dlib_config             #
#                    "C:\Program Files\IAR Systems\Embedded Workbench         #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\ewarm\..\..\..\..\libcox\ -I      #
#                    C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\ewarm\..\..\..\..\testframe\ -I   #
#                    C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\ewarm\..\..\..\..\uart\test\suite #
#                    1\src\ -On                                               #
#    List file    =  C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\ewarm\Debug\List\xuarttest03.lst  #
#    Object file  =  C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Periphera #
#                    l_KLx\uart\test\suite1\ewarm\Debug\Obj\xuarttest03.o     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\renjun\Desktop\Cox\CoX_Peripheral\CoX_Peripheral_KLx\uart\test\suite1\src\xuarttest03.c
      1          //*****************************************************************************
      2          //
      3          //! @page xuart_testcase xuart  test
      4          //!  
      5          //! File: @ref xuart_testcase.c
      6          //! 
      7          //! <h2>Description</h2>
      8          //! This module implements the test sequence for the xuart sub component.<br><br>
      9          //! - \p Board: KLxx <br><br>
     10          //! - \p Last-Time(about): 0.5s <br><br>
     11          //! - \p Phenomenon: Success or failure information will be printed on the VCOM UART.
     12          //!   <br><br>
     13          //! .
     14          //! 
     15          //! <h2>Preconditions</h2>
     16          //! The module requires the following options:<br><br>
     17          //! - \p Option-define: 
     18          //! <br>(1)None.<br><br>
     19          //! - \p Option-hardware: 
     20          //! <br>(1)Connect an USB cable to the development board.<br><br>
     21          //! - \p Option-OtherModule:         
     22          //! <br>None.<br>
     23          //! .
     24          //! In case some of the required options are not enabled then some or all tests
     25          //! may be skipped or result FAILED.<br>
     26          //! 
     27          //! <h2>Test Cases</h2>
     28          //! The module contain those sub tests:<br><br>
     29          //! - \subpage test_xuart_Config
     30          //! .
     31          //! \file xuart_testcase.c
     32          //! \brief xuart test source file
     33          //! \file xuart_testcase.h
     34          //! \brief xuart test header file <br>
     35          //
     36          //*****************************************************************************
     37          
     38          #include "test.h"
     39          #include "testcase.h"
     40          
     41          #define UART_BASE UART1_BASE
     42          
     43          #define UART_BAUD 9600UL
     44          
     45          
     46          //*****************************************************************************
     47          //
     48          //! \page test_xuart test_xuart
     49          //!
     50          //! <h2>Description</h2>
     51          //! 
     52          //! Test xuart . <br> 
     53          //!
     54          //
     55          //*****************************************************************************
     56          
     57          //*****************************************************************************
     58          //
     59          //! Get the Test description of xuart0301  test.
     60          //!
     61          //! \return the desccription of the xuart0301 test.
     62          //
     63          //*****************************************************************************

   \                                 In section .text, align 2, keep-with-next
     64          static char* xuart0301GetTest(void)
     65          {
     66              return "UART 0301 : UART Send/Receive test";
   \                     xuart0301GetTest:
   \   00000000   0x....             LDR      R0,??DataTable3
   \   00000002   0x4770             BX       LR               ;; return
     67          }
     68          
     69          //*****************************************************************************
     70          //
     71          //! Something should do before the test execute of xuart0301 test.
     72          //!
     73          //! \return None.
     74          //
     75          //*****************************************************************************

   \                                 In section .text, align 2, keep-with-next
     76          static void xuart0301Setup(void)
     77          {
     78              xHWREG(SIM_SCGC4) |= SIM_SCGC4_UART0_EN;
   \                     xuart0301Setup:
   \   00000000   0x....             LDR      R0,??DataTable3_1  ;; 0x40048034
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x2180             MOVS     R1,#+128
   \   00000006   0x00C9             LSLS     R1,R1,#+3        ;; #+1024
   \   00000008   0x4301             ORRS     R1,R1,R0
   \   0000000A   0x....             LDR      R0,??DataTable3_1  ;; 0x40048034
   \   0000000C   0x6001             STR      R1,[R0, #+0]
     79          }
   \   0000000E   0x4770             BX       LR               ;; return
     80          
     81          //*****************************************************************************
     82          //
     83          //! Something should do after the test execute of xuart0301 test.
     84          //!
     85          //! \return None.
     86          //
     87          //*****************************************************************************

   \                                 In section .text, align 2, keep-with-next
     88          static void xuart0301TearDown(void)
     89          {
     90              xHWREG(SIM_SCGC4) &= (~SIM_SCGC4_UART0_EN);
   \                     xuart0301TearDown:
   \   00000000   0x....             LDR      R0,??DataTable3_1  ;; 0x40048034
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x....             LDR      R1,??DataTable3_2  ;; 0xfffffbff
   \   00000006   0x4001             ANDS     R1,R1,R0
   \   00000008   0x....             LDR      R0,??DataTable3_1  ;; 0x40048034
   \   0000000A   0x6001             STR      R1,[R0, #+0]
     91          }
   \   0000000C   0x4770             BX       LR               ;; return
     92          
     93          
     94          //*****************************************************************************
     95          //
     96          //! xuart0301 test execute main body.
     97          //
     98          //! \return None.
     99          //
    100          //*****************************************************************************

   \                                 In section .text, align 2, keep-with-next
    101          static void xuart0301Execute(void)
    102          {
   \                     xuart0301Execute:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    103              unsigned char UartData = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    104              unsigned char i = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    105              xtBoolean bTmpBoolean = xfalse;
   \   00000006   0x2600             MOVS     R6,#+0
    106          
    107              UART_Print("\r\nPlease wait 1 s then type the follow string\r\n");
   \   00000008   0x....             LDR      R0,??DataTable3_3
   \   0000000A   0x.... 0x....      BL       UART_Print
    108              UART_Print("123456789ABCDE\r\n");
   \   0000000E   0x....             LDR      R0,??DataTable3_4
   \   00000010   0x.... 0x....      BL       UART_Print
    109          
    110              bTmpBoolean = UARTCharsAvail(UART_BASE);
   \   00000014   0x....             LDR      R0,??DataTable3_5  ;; 0x4006b000
   \   00000016   0x.... 0x....      BL       UARTCharsAvail
   \   0000001A   0x0006             MOVS     R6,R0
    111              TestAssert((xfalse == bTmpBoolean),
    112                      "UART 0301: Function UARTCharsAvail failed!\r\n");
   \   0000001C   0xB2F6             UXTB     R6,R6
   \   0000001E   0x2E00             CMP      R6,#+0
   \   00000020   0xD00A             BEQ      ??xuart0301Execute_0
   \   00000022   0x....             LDR      R0,??DataTable3_6
   \   00000024   0x.... 0x....      BL       _TestAssert
   \   00000028   0x....             LDR      R1,??DataTable3_7
   \   0000002A   0x....             LDR      R0,??DataTable3_8
   \   0000002C   0x.... 0x....      BL       FILE_Print
   \   00000030   0x2170             MOVS     R1,#+112
   \   00000032   0x....             LDR      R0,??DataTable3_9
   \   00000034   0x.... 0x....      BL       FILE_Print
    113              
    114              while((UartData = UARTCharGet(UART_BASE)) != '\n')
   \                     ??xuart0301Execute_0:
   \                     ??xuart0301Execute_1:
   \   00000038   0x....             LDR      R0,??DataTable3_5  ;; 0x4006b000
   \   0000003A   0x.... 0x....      BL       UARTCharGet
   \   0000003E   0x0004             MOVS     R4,R0
   \   00000040   0xB2C0             UXTB     R0,R0
   \   00000042   0x280A             CMP      R0,#+10
   \   00000044   0xD00A             BEQ      ??xuart0301Execute_2
    115              {
    116                  UARTCharPut(UART_BASE, UartData);
   \   00000046   0x0021             MOVS     R1,R4
   \   00000048   0xB2C9             UXTB     R1,R1
   \   0000004A   0x....             LDR      R0,??DataTable3_5  ;; 0x4006b000
   \   0000004C   0x.... 0x....      BL       UARTCharPut
    117                  if(++i >= 15)
   \   00000050   0x1C6D             ADDS     R5,R5,#+1
   \   00000052   0x0028             MOVS     R0,R5
   \   00000054   0x0005             MOVS     R5,R0
   \   00000056   0xB2C0             UXTB     R0,R0
   \   00000058   0x280F             CMP      R0,#+15
   \   0000005A   0xD3ED             BCC      ??xuart0301Execute_1
    118                  {
    119                      break;
    120                  }
    121              }
    122              UARTCharPut(UART_BASE, '\r');
   \                     ??xuart0301Execute_2:
   \   0000005C   0x210D             MOVS     R1,#+13
   \   0000005E   0x....             LDR      R0,??DataTable3_5  ;; 0x4006b000
   \   00000060   0x.... 0x....      BL       UARTCharPut
    123              UARTCharPut(UART_BASE, '\n');
   \   00000064   0x210A             MOVS     R1,#+10
   \   00000066   0x....             LDR      R0,??DataTable3_5  ;; 0x4006b000
   \   00000068   0x.... 0x....      BL       UARTCharPut
    124          
    125          }
   \   0000006C   0xBD70             POP      {R4-R6,PC}       ;; return
    126          
    127          //
    128          // xuart Config test case struct.
    129          //

   \                                 In section .rodata, align 4
    130          const tTestCase sTestxuart0301 = {
   \                     sTestxuart0301:
   \   00000000   0x........         DC32 xuart0301GetTest, xuart0301Setup, xuart0301TearDown
   \              0x........   
   \              0x........   
   \   0000000C   0x........         DC32 xuart0301Execute
    131              xuart0301GetTest,
    132              xuart0301Setup,
    133              xuart0301TearDown,
    134              xuart0301Execute
    135          };
    136          
    137          //
    138          // xuart test suits.
    139          //

   \                                 In section .rodata, align 4
    140          const tTestCase * const psPatternxUART03[] =
   \                     psPatternxUART03:
   \   00000000   0x........         DC32 sTestxuart0301, 0H
   \              0x00000000   

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     `?<Constant "UART 0301 : UART Send...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0xFFFFFBFF         DC32     0xfffffbff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     `?<Constant "\\r\\nPlease wait 1 s the...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     `?<Constant "123456789ABCDE\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x4006B000         DC32     0x4006b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     `?<Constant "UART 0301: Function U...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     `?<Constant "C:\\\\Users\\\\renjun\\\\Deskt...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     `?<Constant "\\r\\nFILE\\t:%s\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     `?<Constant "\\r\\nLINE\\t:%d\\r\\n">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "UART 0301 : UART Send...">`:
   \   00000000   0x55 0x41          DC8 "UART 0301 : UART Send/Receive test"
   \              0x52 0x54    
   \              0x20 0x30    
   \              0x33 0x30    
   \              0x31 0x20    
   \              0x3A 0x20    
   \              0x55 0x41    
   \              0x52 0x54    
   \              0x20 0x53    
   \              0x65 0x6E    
   \              0x64 0x2F    
   \              0x52 0x65    
   \              0x63 0x65    
   \              0x69 0x76    
   \              0x65 0x20    
   \              0x74 0x65    
   \              0x73 0x74    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\r\\nPlease wait 1 s the...">`:
   \   00000000   0x0D 0x0A          DC8 "\015\012Please wait 1 s then type the follow string\015\012"
   \              0x50 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x20 0x77    
   \              0x61 0x69    
   \              0x74 0x20    
   \              0x31 0x20    
   \              0x73 0x20    
   \              0x74 0x68    
   \              0x65 0x6E    
   \              0x20 0x74    
   \              0x79 0x70    
   \              0x65 0x20    
   \              0x74 0x68    
   \              0x65 0x20    
   \              0x66 0x6F    
   \              0x6C 0x6C    
   \              0x6F 0x77    
   \              0x20 0x73    
   \              0x74 0x72    
   \              0x69 0x6E    
   \              0x67 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "123456789ABCDE\\r\\n">`:
   \   00000000   0x31 0x32          DC8 "123456789ABCDE\015\012"
   \              0x33 0x34    
   \              0x35 0x36    
   \              0x37 0x38    
   \              0x39 0x41    
   \              0x42 0x43    
   \              0x44 0x45    
   \              0x0D 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "UART 0301: Function U...">`:
   \   00000000   0x55 0x41          DC8 "UART 0301: Function UARTCharsAvail failed!\015\012"
   \              0x52 0x54    
   \              0x20 0x30    
   \              0x33 0x30    
   \              0x31 0x3A    
   \              0x20 0x46    
   \              0x75 0x6E    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x55 0x41    
   \              0x52 0x54    
   \              0x43 0x68    
   \              0x61 0x72    
   \              0x73 0x41    
   \              0x76 0x61    
   \              0x69 0x6C    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\r\\nFILE\\t:%s\\r\\n">`:
   \   00000000   0x0D 0x0A          DC8 "\015\012FILE\t:%s\015\012"
   \              0x46 0x49    
   \              0x4C 0x45    
   \              0x09 0x3A    
   \              0x25 0x73    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "C:\\\\Users\\\\renjun\\\\Deskt...">`:
   \   00000000   0x43 0x3A          DC8 43H, 3AH, 5CH, 55H, 73H, 65H, 72H, 73H
   \              0x5C 0x55    
   \              0x73 0x65    
   \              0x72 0x73    
   \   00000008   0x5C 0x72          DC8 5CH, 72H, 65H, 6EH, 6AH, 75H, 6EH, 5CH
   \              0x65 0x6E    
   \              0x6A 0x75    
   \              0x6E 0x5C    
   \   00000010   0x44 0x65          DC8 44H, 65H, 73H, 6BH, 74H, 6FH, 70H, 5CH
   \              0x73 0x6B    
   \              0x74 0x6F    
   \              0x70 0x5C    
   \   00000018   0x43 0x6F          DC8 43H, 6FH, 78H, 5CH, 43H, 6FH, 58H, 5FH
   \              0x78 0x5C    
   \              0x43 0x6F    
   \              0x58 0x5F    
   \   00000020   0x50 0x65          DC8 50H, 65H, 72H, 69H, 70H, 68H, 65H, 72H
   \              0x72 0x69    
   \              0x70 0x68    
   \              0x65 0x72    
   \   00000028   0x61 0x6C          DC8 61H, 6CH, 5CH, 43H, 6FH, 58H, 5FH, 50H
   \              0x5C 0x43    
   \              0x6F 0x58    
   \              0x5F 0x50    
   \   00000030   0x65 0x72          DC8 65H, 72H, 69H, 70H, 68H, 65H, 72H, 61H
   \              0x69 0x70    
   \              0x68 0x65    
   \              0x72 0x61    
   \   00000038   0x6C 0x5F          DC8 6CH, 5FH, 4BH, 4CH, 78H, 5CH, 75H, 61H
   \              0x4B 0x4C    
   \              0x78 0x5C    
   \              0x75 0x61    
   \   00000040   0x72 0x74          DC8 72H, 74H, 5CH, 74H, 65H, 73H, 74H, 5CH
   \              0x5C 0x74    
   \              0x65 0x73    
   \              0x74 0x5C    
   \   00000048   0x73 0x75          DC8 73H, 75H, 69H, 74H, 65H, 31H, 5CH, 73H
   \              0x69 0x74    
   \              0x65 0x31    
   \              0x5C 0x73    
   \   00000050   0x72 0x63          DC8 72H, 63H, 5CH, 78H, 75H, 61H, 72H, 74H
   \              0x5C 0x78    
   \              0x75 0x61    
   \              0x72 0x74    
   \   00000058   0x74 0x65          DC8 74H, 65H, 73H, 74H, 30H, 33H, 2EH, 63H
   \              0x73 0x74    
   \              0x30 0x33    
   \              0x2E 0x63    
   \   00000060   0x00               DC8 0
   \   00000061   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\r\\nLINE\\t:%d\\r\\n">`:
   \   00000000   0x0D 0x0A          DC8 "\015\012LINE\t:%d\015\012"
   \              0x4C 0x49    
   \              0x4E 0x45    
   \              0x09 0x3A    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    141          {
    142              &sTestxuart0301,
    143              0
    144          };
    145          
    146          
    147          
    148          
    149          
    150          
    151          
    152          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       16  xuart0301Execute
             16 -> FILE_Print
             16 -> UARTCharGet
             16 -> UARTCharPut
             16 -> UARTCharsAvail
             16 -> UART_Print
             16 -> _TestAssert
        0  xuart0301GetTest
        0  xuart0301Setup
        0  xuart0301TearDown


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "123456789ABCDE\r\n">
     100  ?<Constant "C:\\Users\\renjun\\Deskt...">
      36  ?<Constant "UART 0301 : UART Send...">
      48  ?<Constant "UART 0301: Function U...">
      16  ?<Constant "\r\nFILE\t:%s\r\n">
      16  ?<Constant "\r\nLINE\t:%d\r\n">
      48  ?<Constant "\r\nPlease wait 1 s the...">
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       8  psPatternxUART03
      16  sTestxuart0301
     110  xuart0301Execute
       4  xuart0301GetTest
      16  xuart0301Setup
      14  xuart0301TearDown

 
 308 bytes in section .rodata
 184 bytes in section .text
 
 184 bytes of CODE  memory
 308 bytes of CONST memory

Errors: none
Warnings: none
